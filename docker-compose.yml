version: '2'
services:
  web:
    build: .
    command: foreman start
    #command: foreman start -m web=1,worker=4
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    links:
      - database
      - redis
      - tika
      - elasticsearch
  #   - nomenklatura
      - s3
      - mailcatcher
  #   - sentry
    depends_on:
      - database
      - redis
      - s3
    environment:
      RACK_ENV: development
      SIDEKIQ_SERVER_OPEN: "true"
      ELASTICSEARCH_URL: http://elasticsearch:9200
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgres://kleineanfragen:@database/kleineanfragen
      TIKA_SERVER_URL: http://tika:9998
      S3_ENDPOINT: http://s3:9000
      S3_ACL_SUPPORT: "false"
      PAPER_INDEX_BATCH_SIZE: 250
      SHOW_OBITUARY: "true"
      ENABLE_EMAIL_SUBSCRIPTION: "true"
  #   NOMENKLATURA_HOST: http://nomenklatura:8080
  #   NOMENKLATURA_APIKEY: change_me
  #   SENTRY_DSN: http://public:secret@sentry:9000/2

  database:
    build: contrib/postgres-ka
    environment:
      POSTGRES_USER: kleineanfragen
    ports:
      - "5432:5432"

  redis:
    image: redis
    ports:
      - "6379:6379"

  tika:
    image: logicalspark/docker-tikaserver
    ports:
      - "9998:9998"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
      cluster.routing.allocation.disk.threshold_enabled: "false"
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    ports:
      - "5601:5601"

  #nomenklatura:
  # image: robbi5/nomenklatura
  # links:
  #   - database
  # depends_on:
  #   - database
  # environment:
  #   DATABASE_URL: postgres://kleineanfragen:@database/nomenklatura
  #   SECRET_KEY: change_me
  #   GITHUB_CLIENT_ID: change_me
  #   GITHUB_CLIENT_SECRET: change_me
  # ports:
  #   - "8080:8080"

  s3:
    image: minio/minio:RELEASE.2019-03-27T22-35-21Z
    command: server /data
    environment:
      MINIO_ACCESS_KEY: "AKIAIOSFODNN7EXAMPLE"
      MINIO_SECRET_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    volumes:
      - ./tmp/ka-dev:/data
      - ./tmp/ka-meta:/root/.minio
    ports:
      - "9000:9000"

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"

  ## local sentry to test exceptions notifications
  #sentry:
  #  image: slafs/sentry:7.4
  #  volumes:
  #    - ./tmp/sentry:/data
  #  ports:
  #    - "9000:9000"
  #  environment:
  #    SECRET_KEY: totallysecretdevkey
  #    SENTRY_URL_PREFIX: http://localhost:9000
  #    SENTRY_INITIAL_TEAM: kleineanfragen
  #    SENTRY_INITIAL_PROJECT: kleineanfragen
  #    SENTRY_INITIAL_PLATFORM: rails4
  #    SENTRY_INITIAL_KEY: public:secret